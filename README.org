#+AUTHOR: Wasym A. Alonso
#+TITLE: WGE: Wildebeest Game Engineâ„¢

#+CAPTION: WGE logo
[[assets/logo.png]]

# Buy Me A Coffee
#+begin_html
<p align="center">
<a href="https://www.buymeacoffee.com/wildebeest.game.engine"><img src="https://cdn.buymeacoffee.com/buttons/default-yellow.png" alt="Buy Me A Coffee" height=41 width=174></a>
</p>
#+end_html

# Repository badges
#+begin_html
<p align="center">
<a href="https://www.gnu.org/licenses/gpl-3.0.html"><img src="https://img.shields.io/badge/License-GPLv3-blue.svg" alt="GNU GPL v3.0"></a>
<a href="https://www.codefactor.io/repository/github/iwas-coder/wge"><img src="https://www.codefactor.io/repository/github/iwas-coder/wge/badge" alt="Code QA"></a>
</p>
#+end_html

(...)

#+BEGIN_QUOTE
This work and all its documentation is licensed under the Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) License. @@html:<br>@@
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. @@html:<br>@@
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#+END_QUOTE

* Table of Contents :toc:
- [[#preliminary-aspects][Preliminary aspects]]
  - [[#platform-support][Platform support]]
  - [[#tech-stack][Tech stack]]
  - [[#project-structure][Project structure]]
  - [[#feature-list][Feature list]]
  - [[#engine-architecture][Engine architecture]]
  - [[#renderer][Renderer]]
    - [[#architecture][Architecture]]
    - [[#lifecycle][Lifecycle]]
    - [[#phases][Phases]]
    - [[#graphics-pipeline][Graphics pipeline]]
    - [[#shader-modules][Shader modules]]
- [[#build][Build]]
- [[#usage][Usage]]

* Preliminary aspects

** Platform support

Linux and Windows.

** Tech stack

- *Language:* C (*gnu17* - *ISO C 2017* [ ~ISO/IEC 9899:2018~ ] with *GNU extensions*)
- *Compiler:* GCC / Clang / MinGW-w64-GCC
- *Graphics API:* Vulkan

** Project structure

#+begin_src mermaid
mindmap
  root(("Engine (shared)"))
    ("Hot-reloadable code (shared)")
      ("Game (exec)")
    ("Test (exec)")
    ("Editor (exec)")
#+end_src

** Feature list

- Lightweight build system (GNU Make)
- Low-level utilities (dynamic arrays, string handling, etc.)
- Platform layer (Linux and Windows abstractions for windowing, input, console interaction, etc.)
- Logger (debugging purposes)
- File I/O capabilities
- Application layer
- Renderer and API abstraction layer
- Memory management (custom allocators, etc.)
- Entity Component System (ECS)
- Profiling and debugging utilities
- Scripts support via hot-realoadable modules
- Physics system

** Engine architecture

#+CAPTION: Engine architecture diagram
[[assets/engine-arch-diagram.png]]

** Renderer

(...)

*** Architecture

(...)

*** Lifecycle

(...)

*** Phases

(...)

*** Graphics pipeline

(...)

*** Shader modules

(...)

* Build

WGE ships with a ready-to-go ~Makefile~, so *GNU Make* is needed in order to build the engine. It is as simple as doing:
#+begin_src sh
$  make
#+end_src
By default, it targets the *Linux platform* (e.g. /GNU/Linux/). In order to build the project for Windows, it will be needed the *MinGW-w64* compiler suite in order to cross-compile it. With all that setup, it can be specified by doing:
#+begin_src sh
$  make TARGET=windows
#+end_src

* Usage

(...)
